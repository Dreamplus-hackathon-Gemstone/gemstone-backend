{
    "swagger": "2.0",
    "info": {
        "description": "This is API Documentation Gemstone Backend",
        "title": "Gemstone Backend",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Backend-Tech",
            "email": "ff.primrose@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "로그인",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Req",
                        "name": "LoginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/global.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.LoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.LoginRes"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "회원가입",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register Req",
                        "name": "RegisterReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/global.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.RegisterRes"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/update": {
            "patch": {
                "description": "닉네임 수정",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "UpdateNickname",
                "parameters": [
                    {
                        "description": "UpdateNickname Req",
                        "name": "UpdateNicknameReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/global.UpdateNicknameReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.UpdateNicknameRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.UpdateNicknameRes"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify/{nickname}": {
            "get": {
                "description": "존재하는 닉네임인지 확인.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify User Nickname",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VerifyNickname Req",
                        "name": "nickname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.VerifyNicknameRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.VerifyNicknameRes"
                        }
                    }
                }
            }
        },
        "/api/v1/genre/create": {
            "post": {
                "description": "테스트용 API 입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Store Genre",
                "parameters": [
                    {
                        "description": "Store Req",
                        "name": "StoreGenreReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/global.StoreGenreReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.StoreGenreRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.StoreGenreRes"
                        }
                    }
                }
            }
        },
        "/api/v1/genre/movie": {
            "get": {
                "description": "Genre 별 Movie 조회합니다. Offset 받을 수 있고, Limit 20으로 고정입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Find Movie By Genre ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GenreID",
                        "name": "genreId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.FindMovieByGenreRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.FindMovieByGenreRes"
                        }
                    }
                }
            }
        },
        "/api/v1/genre/proposal": {
            "get": {
                "description": "Genre 별 Proposal 조회합니다. Offset 받을 수 있고, Limit 20으로 고정입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Find Proposal By Genre ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GenreID",
                        "name": "genreId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.FindProposalByGenreRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.FindProposalByGenreRes"
                        }
                    }
                }
            }
        },
        "/api/v1/movie": {
            "get": {
                "description": "Movie 조회합니다. Offset 받을 수 있고, Limit 20으로 고정입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Find Many Movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.FindManyMovieRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.FindManyMovieRes"
                        }
                    }
                }
            }
        },
        "/api/v1/movie/create": {
            "post": {
                "description": "테스트용 API 입니다. Polling 혹은 Listen 시스템 제작 시 삭제 예정입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Store Movie",
                "parameters": [
                    {
                        "description": "Store Req",
                        "name": "StoreMovieReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/global.StoreMovieReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.StoreMovieRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.StoreMovieRes"
                        }
                    }
                }
            }
        },
        "/api/v1/movie/{cid}": {
            "get": {
                "description": "Movie 세부 정보를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Find Single Movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ContentID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.FindMovieRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.FindMovieRes"
                        }
                    }
                }
            }
        },
        "/api/v1/proposal": {
            "get": {
                "description": "Proposal 조회합니다. Offset 받을 수 있고, Limit 20으로 고정입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proposal"
                ],
                "summary": "Find Many Proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.FindManyProposalRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.FindManyProposalRes"
                        }
                    }
                }
            }
        },
        "/api/v1/proposal/store": {
            "post": {
                "description": "테스트용 API 입니다. Polling 혹은 Listen 시스템 제작 시 삭제 예정입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proposal"
                ],
                "summary": "Store Proposal",
                "parameters": [
                    {
                        "description": "Store Req",
                        "name": "StoreProposalReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/global.StoreProposalReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.StoreProposalRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.StoreProposalRes"
                        }
                    }
                }
            }
        },
        "/api/v1/proposal/{cid}": {
            "get": {
                "description": "Proposal 세부 정보를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proposal"
                ],
                "summary": "Find Single Proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ContentID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/global.FindProposalRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/global.FindProposalRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Movie": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maker_id": {
                    "type": "integer"
                },
                "miners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                },
                "movie_uri": {
                    "type": "string"
                },
                "thumbnail_uri": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Proposal": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document_uri": {
                    "type": "string"
                },
                "estimated_production_time": {
                    "type": "string"
                },
                "expected_release_year": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maker_id": {
                    "type": "integer"
                },
                "miners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                },
                "target_price": {
                    "type": "integer"
                },
                "thumbnail_uri": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "movie": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Movie"
                    }
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Movie"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "proposal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Proposal"
                    }
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Proposal"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "global.FindManyMovieRes": {
            "type": "object",
            "properties": {
                "err": {},
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Movie"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.FindManyProposalRes": {
            "type": "object",
            "properties": {
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Proposal"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.FindMovieByGenreRes": {
            "type": "object",
            "properties": {
                "err": {},
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Movie"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.FindMovieRes": {
            "type": "object",
            "properties": {
                "err": {},
                "movie": {
                    "$ref": "#/definitions/domain.Movie"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.FindProposalByGenreRes": {
            "type": "object",
            "properties": {
                "err": {},
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Proposal"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.FindProposalRes": {
            "type": "object",
            "properties": {
                "err": {},
                "proposal": {
                    "$ref": "#/definitions/domain.Proposal"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.LoginReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "global.LoginRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.RegisterReq": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "global.RegisterRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.StoreGenreReq": {
            "type": "object",
            "properties": {
                "genre_type": {
                    "type": "string"
                }
            }
        },
        "global.StoreGenreRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.StoreMovieReq": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "integer"
                },
                "maker_id": {
                    "type": "integer"
                },
                "movie_uri": {
                    "type": "string"
                },
                "thumbnail_uri": {
                    "type": "string"
                }
            }
        },
        "global.StoreMovieRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.StoreProposalReq": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document_uri": {
                    "type": "string"
                },
                "estimated_production_time": {
                    "type": "string"
                },
                "expected_release_year": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "integer"
                },
                "maker_id": {
                    "type": "integer"
                },
                "target_price": {
                    "type": "integer"
                },
                "thumbnail_uri": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "global.StoreProposalRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.UpdateNicknameReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "global.UpdateNicknameRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "global.VerifyNicknameRes": {
            "type": "object",
            "properties": {
                "err": {},
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}